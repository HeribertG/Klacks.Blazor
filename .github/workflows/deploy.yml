# .github/workflows/deploy.yml f√ºr Klacks.Blazor
name: Deploy Klacks.Blazor to Hetzner

on:
  push:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT || 22 }}
        script: |
          set -e
          echo "üöÄ Deploying Klacks.Blazor..."
          
          # Navigate to correct directory
          cd /root/apps
          
          # Update Klacks.Blazor Repository
          if [ -d "Klacks.Blazor" ]; then
            echo "üì¶ Updating Klacks.Blazor..."
            cd Klacks.Blazor
            # Get current branch name
            CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
            echo "Current branch: $CURRENT_BRANCH"
            git fetch origin
            git pull origin $CURRENT_BRANCH
            cd ..
          else
            echo "üì¶ Cloning Klacks.Blazor..."
            git clone https://github.com/HeribertG/Klacks.Blazor.git
          fi
          
          # Check Docker Compose version
          if command -v docker-compose &> /dev/null; then
            COMPOSE_CMD="docker-compose"
          else
            COMPOSE_CMD="docker compose"
          fi
          echo "Using: $COMPOSE_CMD"
          
          # Rebuild and restart only Blazor service
          echo "üî® Building Klacks.Blazor..."
          timeout 900 $COMPOSE_CMD build klacks-blazor --no-cache
          
          echo "üîÑ Restarting Klacks.Blazor..."
          $COMPOSE_CMD up -d klacks-blazor
          
          echo "‚úÖ Klacks.Blazor deployment completed!"
          
          # Status check
          echo "üìä Service status:"
          $COMPOSE_CMD ps klacks-blazor
          
          # Health Check
          sleep 15
          echo "üè• Health Check for Klacks.Blazor..."
          
          # Check if service is running
          if $COMPOSE_CMD ps klacks-blazor | grep -q "Up"; then
            echo "‚úÖ Container is running"
          else
            echo "‚ùå Container is not running"
            $COMPOSE_CMD logs klacks-blazor --tail=20
            exit 1
          fi
          
          # Check HTTP response
          if curl -f -s -o /dev/null -w "%{http_code}" http://localhost:7002 | grep -q "200\|301\|302"; then
            echo "‚úÖ Klacks.Blazor is accessible on port 7002"
          else
            echo "‚ùå Klacks.Blazor health check failed"
            echo "Container logs:"
            $COMPOSE_CMD logs klacks-blazor --tail=20
            exit 1
          fi